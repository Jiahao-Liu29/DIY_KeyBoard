C51 COMPILER V9.60.0.0   DEBUG                                                             08/27/2022 15:42:08 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DEBUG
OBJECT MODULE PLACED IN .\Objects\Debug.obj
COMPILER INVOKED BY: E:\kali\C51\BIN\C51.EXE Public\Debug.C OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\Debug.lst) OBJECT(.\Objects\Debug.obj)

line level    source

   1          /********************************** (C) COPYRIGHT *******************************
   2          * File Name          : Debug.C
   3          * Author             : WCH
   4          * Version            : V1.6
   5          * Date               : 2021/12/15
   6          * Description        : CH554 DEBUG Interface
   7                               CH554Ö÷ÆµÐÞ¸Ä¡¢ÑÓÊ±º¯Êý¶¨Òå
   8                               ´®¿Ú0ºÍ´®¿Ú1³õÊ¼»¯
   9                               ´®¿Ú0ºÍ´®¿Ú1µÄÊÕ·¢×Óº¯Êý
  10                               ¿´ÃÅ¹·³õÊ¼»¯                                                                                
  11          *******************************************************************************/
  12          
  13          #include "CH554.H"
  14          #include "Debug.H"
  15          
  16          /*******************************************************************************
  17          * Function Name  : CfgFsys( )
  18          * Description    : CH554Ê±ÖÓÑ¡ÔñºÍÅäÖÃº¯Êý,Ä¬ÈÏÊ¹ÓÃFsys 6MHz£¬FREQ_SYS¿ÉÒÔÍ¨¹ý
  19                             CLOCK_CFGÅäÖÃµÃµ½£¬¹«Ê½ÈçÏÂ£º
  20                             Fsys = (Fosc * 4/(CLOCK_CFG & MASK_SYS_CK_SEL);¾ßÌåÊ±ÖÓÐèÒª×Ô¼ºÅäÖÃ 
  21          * Input          : None
  22          * Output         : None
  23          * Return         : None
  24          *******************************************************************************/ 
  25          void    CfgFsys( )  
  26          {
  27   1      #if OSC_EN_XT   
                              SAFE_MOD = 0x55;
                              SAFE_MOD = 0xAA;
                  CLOCK_CFG |= bOSC_EN_XT;                          //Ê¹ÄÜÍâ²¿¾§Õñ
                              mDelaymS(10);
                              SAFE_MOD = 0x55;
                              SAFE_MOD = 0xAA;
                  CLOCK_CFG &= ~bOSC_EN_INT;                        //¹Ø±ÕÄÚ²¿¾§Õñ 
                              SAFE_MOD = 0x00;
              #endif  
  37   1                      SAFE_MOD = 0x55;
  38   1                      SAFE_MOD = 0xAA;
  39   1      #if FREQ_SYS == 24000000        
  40   1                      CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x06;  // 24MHz     
  41   1      #endif  
  42   1      #if FREQ_SYS == 16000000                
                              CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x05;  // 16MHz     
              #endif
  45   1      #if FREQ_SYS == 12000000                
                              CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x04;  // 12MHz
              #endif  
  48   1      #if FREQ_SYS == 6000000         
                              CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x03;  // 6MHz      
              #endif  
  51   1      #if FREQ_SYS == 3000000 
                              CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x02;  // 3MHz      
              #endif
  54   1      #if FREQ_SYS == 750000  
C51 COMPILER V9.60.0.0   DEBUG                                                             08/27/2022 15:42:08 PAGE 2   

                              CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x01;  // 750KHz
              #endif
  57   1      #if FREQ_SYS == 187500  
                              CLOCK_CFG = CLOCK_CFG & ~ MASK_SYS_CK_SEL | 0x00;  // 187.5KHz  
              #endif
  60   1                      SAFE_MOD = 0x00;
  61   1      }
  62          
  63          /*******************************************************************************
  64          * Function Name  : mDelayus(UNIT16 n)
  65          * Description    : usÑÓÊ±º¯Êý
  66          * Input          : UNIT16 n
  67          * Output         : None
  68          * Return         : None
  69          *******************************************************************************/ 
  70          void    mDelayuS( UINT16 n )  // ÒÔuSÎªµ¥Î»ÑÓÊ±
  71          {
  72   1      #ifdef  FREQ_SYS
  73   1      #if             FREQ_SYS <= 6000000
                              n >>= 2;
              #endif
  76   1      #if             FREQ_SYS <= 3000000
                              n >>= 2;
              #endif
  79   1      #if             FREQ_SYS <= 750000
                              n >>= 4;
              #endif
  82   1      #endif
  83   1              while ( n ) {  // total = 12~13 Fsys cycles, 1uS @Fsys=12MHz
  84   2                      ++ SAFE_MOD;  // 2 Fsys cycles, for higher Fsys, add operation here
  85   2      #ifdef  FREQ_SYS
  86   2      #if             FREQ_SYS >= 14000000
  87   2                      ++ SAFE_MOD;
  88   2      #endif
  89   2      #if             FREQ_SYS >= 16000000
  90   2                      ++ SAFE_MOD;
  91   2      #endif
  92   2      #if             FREQ_SYS >= 18000000
  93   2                      ++ SAFE_MOD;
  94   2      #endif
  95   2      #if             FREQ_SYS >= 20000000
  96   2                      ++ SAFE_MOD;
  97   2      #endif
  98   2      #if             FREQ_SYS >= 22000000
  99   2                      ++ SAFE_MOD;
 100   2      #endif
 101   2      #if             FREQ_SYS >= 24000000
 102   2                      ++ SAFE_MOD;
 103   2      #endif
 104   2      #endif
 105   2                      -- n;
 106   2              }
 107   1      }
 108          
 109          /*******************************************************************************
 110          * Function Name  : mDelayms(UNIT16 n)
 111          * Description    : msÑÓÊ±º¯Êý
 112          * Input          : UNIT16 n
 113          * Output         : None
 114          * Return         : None
 115          *******************************************************************************/
 116          void    mDelaymS( UINT16 n )                                                  // ÒÔmSÎªµ¥Î»ÑÓÊ±
C51 COMPILER V9.60.0.0   DEBUG                                                             08/27/2022 15:42:08 PAGE 3   

 117          {
 118   1              while ( n ) {
 119   2      #ifdef  DELAY_MS_HW
                              while ( ( TKEY_CTRL & bTKC_IF ) == 0 );
                              while ( TKEY_CTRL & bTKC_IF );
              #else
 123   2                      mDelayuS( 1000 );
 124   2      #endif
 125   2                      -- n;
 126   2              }
 127   1      }                                         
 128          
 129          /*******************************************************************************
 130          * Function Name  : CH554UART0Alter()
 131          * Description    : CH554´®¿Ú0Òý½ÅÓ³Éä,´®¿ÚÓ³Éäµ½P1.2ºÍP1.3
 132          * Input          : None
 133          * Output         : None
 134          * Return         : None
 135          *******************************************************************************/
 136          void CH554UART0Alter()
 137          {
 138   1          PIN_FUNC |= bUART0_PIN_X;                                                  //´®¿ÚÓ³Éäµ½P1.2ºÍP1.3
 139   1      }
 140          
 141          /*******************************************************************************
 142          * Function Name  : mInitSTDIO()
 143          * Description    : CH554´®¿Ú0³õÊ¼»¯,Ä¬ÈÏÊ¹ÓÃT1×÷UART0µÄ²¨ÌØÂÊ·¢ÉúÆ÷,Ò²¿ÉÒÔÊ¹ÓÃT2
 144                             ×÷Îª²¨ÌØÂÊ·¢ÉúÆ÷
 145          * Input          : None
 146          * Output         : None
 147          * Return         : None
 148          *******************************************************************************/
 149          void    mInitSTDIO( )
 150          {
 151   1          UINT32 x;
 152   1          UINT8 x2; 
 153   1      
 154   1          SM0 = 0;
 155   1          SM1 = 1;
 156   1          SM2 = 0;                                                                   //´®¿Ú0Ê¹ÓÃÄ£Ê½1
 157   1                                                                                     //Ê¹ÓÃTimer1×÷Îª²¨ÌØÂÊ·¢ÉúÆ
             -÷
 158   1          RCLK = 0;                                                                  //UART0½ÓÊÕÊ±ÖÓ
 159   1          TCLK = 0;                                                                  //UART0·¢ËÍÊ±ÖÓ
 160   1          PCON |= SMOD;
 161   1          x = 10 * FREQ_SYS / UART0_BUAD / 16;                                       //Èç¹û¸ü¸ÄÖ÷Æµ£¬×¢ÒâxµÄÖµ²»
             -ÒªÒç³ö                            
 162   1          x2 = x % 10;
 163   1          x /= 10;
 164   1          if ( x2 >= 5 ) x ++;                                                       //ËÄÉáÎåÈë
 165   1      
 166   1          TMOD = TMOD & ~ bT1_GATE & ~ bT1_CT & ~ MASK_T1_MOD | bT1_M1;              //0X20£¬Timer1×÷Îª8Î»×Ô¶¯ÖØ
             -ÔØ¶¨Ê±Æ÷
 167   1          T2MOD = T2MOD | bTMR_CLK | bT1_CLK;                                        //Timer1Ê±ÖÓÑ¡Ôñ
 168   1          TH1 = 0-x;                                                                 //12MHz¾§Õñ,buad/12ÎªÊµ¼ÊÐè
             -ÉèÖÃ²¨ÌØÂÊ
 169   1          TR1 = 1;                                                                   //Æô¶¯¶¨Ê±Æ÷1
 170   1          TI = 1;
 171   1          REN = 1;                                                                   //´®¿Ú0½ÓÊÕÊ¹ÄÜ
 172   1      }
 173          
 174          /*******************************************************************************
C51 COMPILER V9.60.0.0   DEBUG                                                             08/27/2022 15:42:08 PAGE 4   

 175          * Function Name  : CH554UART0RcvByte()
 176          * Description    : CH554UART0½ÓÊÕÒ»¸ö×Ö½Ú
 177          * Input          : None
 178          * Output         : None
 179          * Return         : SBUF
 180          *******************************************************************************/
 181          UINT8  CH554UART0RcvByte( )
 182          {
 183   1          while(RI == 0);                                                            //²éÑ¯½ÓÊÕ£¬ÖÐ¶Ï·½Ê½¿É²»ÓÃ
 184   1          RI = 0;
 185   1          return SBUF;
 186   1      }
 187          
 188          /*******************************************************************************
 189          * Function Name  : CH554UART0SendByte(UINT8 SendDat)
 190          * Description    : CH554UART0·¢ËÍÒ»¸ö×Ö½Ú
 191          * Input          : UINT8 SendDat£»Òª·¢ËÍµÄÊý¾Ý
 192          * Output         : None
 193          * Return         : None
 194          *******************************************************************************/
 195          void CH554UART0SendByte(UINT8 SendDat)
 196          {
 197   1              SBUF = SendDat;                                                              //²éÑ¯·¢ËÍ£¬ÖÐ¶Ï·½Ê½¿É²»ÓÃÏÂ
             -Ãæ2ÌõÓï¾ä,µ«·¢ËÍÇ°ÐèTI=0
 198   1              while(TI ==0);
 199   1              TI = 0;
 200   1      }
 201          
 202          /*******************************************************************************
 203          * Function Name  : CH554WDTModeSelect(UINT8 mode)
 204          * Description    : CH554¿´ÃÅ¹·Ä£Ê½Ñ¡Ôñ
 205          * Input          : UINT8 mode 
 206                             0  timer
 207                             1  watchDog
 208          * Output         : None
 209          * Return         : None
 210          *******************************************************************************/
 211          void CH554WDTModeSelect(UINT8 mode)
 212          {
 213   1         SAFE_MOD = 0x55;
 214   1         SAFE_MOD = 0xaa;                                                             //½øÈë°²È«Ä£Ê½
 215   1         if(mode){
 216   2           GLOBAL_CFG |= bWDOG_EN;                                                    //Æô¶¯¿´ÃÅ¹·¸´Î»
 217   2         }
 218   1         else GLOBAL_CFG &= ~bWDOG_EN;                                                    //Æô¶¯¿´ÃÅ¹·½ö½ö×÷Îª¶¨Ê±Æ÷
 219   1         SAFE_MOD = 0x00;                                                             //ÍË³ö°²È«Ä£Ê½
 220   1         WDOG_COUNT = 0;                                                              //¿´ÃÅ¹·¸³³õÖµ
 221   1      }
 222          
 223          /*******************************************************************************
 224          * Function Name  : CH554WDTFeed(UINT8 tim)
 225          * Description    : CH554¿´ÃÅ¹·¶¨Ê±Ê±¼äÉèÖÃ
 226          * Input          : UINT8 tim ¿´ÃÅ¹·¸´Î»Ê±¼äÉèÖÃ
 227                             00H(6MHz)=2.8s
 228                             80H(6MHz)=1.4s
 229          * Output         : None
 230          * Return         : None
 231          *******************************************************************************/
 232          void CH554WDTFeed(UINT8 tim)
 233          {
 234   1         WDOG_COUNT = tim;                                                             //¿´ÃÅ¹·¼ÆÊýÆ÷¸³Öµ     
 235   1      }
C51 COMPILER V9.60.0.0   DEBUG                                                             08/27/2022 15:42:08 PAGE 5   

 236          
 237          // /*******************************************************************************
 238          // * Function Name  : CH554SoftReset()
 239          // * Description    : CH554Èí¸´Î»
 240          // * Input          : None
 241          // * Output         : None
 242          // * Return         : None
 243          // *******************************************************************************/
 244          // void CH554SoftReset( )
 245          // {
 246          //     SAFE_MOD = 0x55;
 247          //     SAFE_MOD = 0xAA;
 248          //     GLOBAL_CFG       |=bSW_RESET;
 249          // }
 250          
 251          // /*******************************************************************************
 252          // * Function Name  : CH554USBDevWakeup()
 253          // * Description    : CH554Éè±¸Ä£Ê½»½ÐÑÖ÷»ú£¬·¢ËÍKÐÅºÅ
 254          // * Input          : None
 255          // * Output         : None
 256          // * Return         : None
 257          // *******************************************************************************/
 258          // void CH554USBDevWakeup( )
 259          // {
 260          //#ifdef Fullspeed
 261          //      UDEV_CTRL |= bUD_LOW_SPEED;
 262          //      mDelaymS(2);
 263          //      UDEV_CTRL &= ~bUD_LOW_SPEED;            
 264          //#else
 265          //      UDEV_CTRL &= ~bUD_LOW_SPEED;
 266          //      mDelaymS(2);
 267          //      UDEV_CTRL |= bUD_LOW_SPEED;     
 268          //#endif        
 269          // }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    234    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
